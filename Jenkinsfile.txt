pipeline {
    agent any

    stages {
        stage('Pull code from GitHub') {
            steps {
                git 'https://github.com/AniketDandekar/Jenkins-CI-CD-project.git'
            }
        }
    
    
        stage('Create zip file from website code files') {
            steps {
                sh 'tar -czvf webapp.tar.gz index.html script.js style.css'
            }
    
        }
        
        
        stage('Build Docker image on jenkins-slave-node') {
            steps {
                sh "sudo docker build -t aniketadmirl/motivation_website:${BUILD_TAG}  ."
              
            }
            
        }
        
        
        stage('Push Image to Docker-Hub Rreository') {
            steps {   
                withCredentials([string(credentialsId: 'DOCKER_HUB_PWD', variable: 'DOCKER_HUB_PASS_CODE')]) {
    
                sh "sudo docker login -u aniketadmiral -p $DOCKER_HUB_PASS_CODE"
                }
               
               sh "sudo docker push aniketadmirl/motivation_website:${BUILD_TAG}"
            }
        }
        
        
        stage('Deploy website for Devloper to test') {
            steps {
                sh 'sudo docker rm -f webos1'
                sh "sudo docker run  -d  -p  8080:80 --name webos1 aniketadmirl/motivation_website:${BUILD_TAG}"
                
            }          
        }
        
        
        stage('Deploy website for Testing team in new ec2 instance which we launch already manually') {
            steps {
               sshagent(['TESTING_INFO']) {
                // commented line --> "TESTING_INFO" is ID or variable that we create while adding info about Testing team ec2 instance so jenkins can login 
                    
                    sh "ssh  -o  StrictHostKeyChecking=no ec2-user@13.235.243.109 sudo docker rm -f webos1"
                // commented line --> -o  StrictHostKeyChecking=n   <--- when we do ssh first time it ask type yes/no, so to skip this step we use this option

                    sh "ssh ec2-user@13.235.243.109 sudo docker run  -d  -p  8080:80 --name myjavaapp  aniketadmirl/motivation_website:${BUILD_TAG}"
                }
            }           
        }
        
        
         stage('Testing team doing there test on Website') {
            steps {
                retry(10) {
                    sh 'curl --silent http://13.235.243.109:80 |  grep Next'
                }
            }
        }
          
         
        stage('Give manual approval') {
            steps {
                input(message: 'like to release deployment to production')
            }
        }
           
        stage('Deploying website in Production in new ec2 instance which we launched already manually') {
            steps {
                sshagent(['PRODUCTION_INFO']) {
                    sh "ssh  -o  StrictHostKeyChecking=no ec2-user@35.154.112.94 sudo docker rm -f webos1"
                    sh "ssh  ec2-user@35.154.112.94 sudo docker run  -d  -p  8080:80 --name myjavaapp  aniketadmirl/motivation_website:${BUILD_TAG}"
                }
            }
            
        } 
               
    }
   
}
